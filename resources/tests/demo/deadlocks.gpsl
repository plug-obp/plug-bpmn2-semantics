noDeadlock = [] not |deadlock|

noDeadlock_bpmn = [] (|deadlock| implies |state.isTerminated()|)

alwaysTerminates = []<>|state.isTerminated()|

// If "Task B" ends before "signal" is thrown, process always properly ends
// Given the following atomic propositions :
B = |action.endsTask("Task A")|
S = |action.sendsSignal("signal")|
T = |state.isTerminated()|
// Dwyers Pattern : After B, T responds to S
noDeadlock_iff = [] (B -> [](S -> <>T))